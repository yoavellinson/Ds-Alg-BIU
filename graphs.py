import numpy as np

def Floyed_Warshell(W): #all pairs shortest paths
    d = np.array(W)
    n = d.shape[1]
    for k in range(0,n):
         for i in range(0,n):
            for j in range(0,n):
                d[i][j]=min(d[i][j],d[i][k]+d[k][j])
                
    print(d)

g = [[0,0,0,0,0,-5,0,5,0,0,0,-1,2,0,0],
[4,0,0,0,0,0,0,0,0,3,0,0,3,2,0],
[0,0,0,1,3,0,0,0,3,0,0,4,0,0,0],
[0,0,0,0,0,0,0,0,0,4,1,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[4,0,0,0,0,0,0,0,0,4,3,0,0,0,0],
[1,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
[0,0,0,-2,0,5,0,0,0,0,0,5,0,3,0],
[0,0,1,0,0,0,0,5,0,2,0,4,0,0,0],
[2,2,0,0,0,0,5,0,0,0,0,0,0,0,0],
[2,0,2,0,0,-3,0,2,0,2,0,0,0,0,0],
[0,0,0,0,0,0,2,0,4,0,5,0,0,0,0],
[0,5,0,0,3,0,0,2,0,0,0,0,0,1,0],
[0,0,0,0,0,0,0,0,4,0,0,1,3,0,0],
[0,2,0,0,0,0,0,0,0,2,0,0,0,0,0]]

Floyed_Warshell(g)